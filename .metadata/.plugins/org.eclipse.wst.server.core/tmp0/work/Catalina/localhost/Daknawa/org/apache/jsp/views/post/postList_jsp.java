/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-04-15 03:35:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.post;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.kh.post.model.vo.Post;
import com.kh.common.model.vo.PageInfo;
import com.kh.member.model.vo.Member;

public final class postList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/post/../common/menubar.jsp", Long.valueOf(1681527264440L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.common.model.vo.PageInfo");
    _jspx_imports_classes.add("com.kh.post.model.vo.Post");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.kh.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

	PageInfo pi = (PageInfo)request.getAttribute("pi");
	ArrayList<Post> list = (ArrayList<Post>)request.getAttribute("list");
	
	int currentPage = pi.getCurrentPage();
	int startPage = pi.getStartPage();
	int endPage = pi.getEndPage();
	int maxPage = pi.getMaxPage();
	

      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Post List</title>\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("    .outer {\n");
      out.write("        margin: 10%;\n");
      out.write("        margin-top: 3%;\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    table {\n");
      out.write("    border-collapse: collapse;\n");
      out.write("    width: 100%;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    td, th {\n");
      out.write("    border: 1px solid #ddd;\n");
      out.write("    padding: 20px;\n");
      out.write("    text-align: left;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .btn-group { float: right; }\n");
      out.write("\n");
      out.write("    #list, #insertList { /* 버튼크기를 지정 */\n");
      out.write("        height : 40px; \n");
      out.write("        width : 90px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #left-btn, #right-btn { float : right; } \n");
      out.write("\n");
      out.write("    #page-numbers { float : left; }\n");
      out.write("\n");
      out.write("    .search-container { float : right }\n");
      out.write("\n");
      out.write("    .post-1:hover { color : lightgray; }\n");
      out.write("\n");
      out.write("    </style>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	");
      out.write('\r');
      out.write('\n');

	
	String contextPath = request.getContextPath(); // "/jsp"
	
	Member loginUser = (Member)session.getAttribute("loginUser"); // 로그인한 유저의 정보
	
	String alertMsg = (String)session.getAttribute("alertMsg"); // alert 메세지
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"english\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>exported project</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta property=\"twitter:card\" content=\"summary_large_image\" />\r\n");
      out.write("<!-- CSS only -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\"\r\n");
      out.write("	crossorigin=\"anonymous\" />\r\n");
      out.write("<style data-tag=\"reset-style-sheet\">\r\n");
      out.write("html {\r\n");
      out.write("	line-height: 1.15;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	border-width: 0;\r\n");
      out.write("	border-style: solid;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p, li, ul, pre, div, h1, h2, h3, h4, h5, h6, figure, blockquote,\r\n");
      out.write("	figcaption {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("	background-color: transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button, input, optgroup, select, textarea {\r\n");
      out.write("	font-family: inherit;\r\n");
      out.write("	font-size: 100%;\r\n");
      out.write("	line-height: 1.15;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button, select {\r\n");
      out.write("	text-transform: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button, [type=\"button\"], [type=\"reset\"], [type=\"submit\"] {\r\n");
      out.write("	-webkit-appearance: button;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button::-moz-focus-inner, [type=\"button\"]::-moz-focus-inner, [type=\"reset\"]::-moz-focus-inner,\r\n");
      out.write("	[type=\"submit\"]::-moz-focus-inner {\r\n");
      out.write("	border-style: none;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:-moz-focus, [type=\"button\"]:-moz-focus, [type=\"reset\"]:-moz-focus,\r\n");
      out.write("	[type=\"submit\"]:-moz-focus {\r\n");
      out.write("	outline: 1px dotted ButtonText;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	color: inherit;\r\n");
      out.write("	text-decoration: inherit;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input {\r\n");
      out.write("	padding: 2px 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("img {\r\n");
      out.write("	display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html {\r\n");
      out.write("	scroll-behavior: smooth;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<style data-tag=\"default-style-sheet\">\r\n");
      out.write("html {\r\n");
      out.write("	font-family: Inter;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	font-weight: 400;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	text-transform: none;\r\n");
      out.write("	letter-spacing: normal;\r\n");
      out.write("	line-height: 1.15;\r\n");
      out.write("	color: var(- -dl-color-gray-black);\r\n");
      out.write("	background-color: var(- -dl-color-gray-white);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown-box1 {\r\n");
      out.write("	background-color: #f9f9f9;\r\n");
      out.write("	min-width: 160px;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("	height: 80px;\r\n");
      out.write("	border: 1px solid #f9f9f9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("/* navigator 에 대한 작업용 임시스타일 */\r\n");
      out.write("#navigator {\r\n");
      out.write("	width: 1000px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 전체를 감사는 navi */\r\n");
      out.write("#navi {\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	/*\r\n");
      out.write("            p 태그와 마찬가지로 ul 태그 또한 위, 아래로 기본 margin 이 잡혀있음\r\n");
      out.write("            또한 ul 태그는 padding이 왼쪽에 기본적으로 존재함\r\n");
      out.write("            => margin : 0px; 과 padding : 0px; 으로 margin과 padding을 없애기\r\n");
      out.write("        */\r\n");
      out.write("	margin: 0px;\r\n");
      out.write("	padding: 0px; /* padding 값 조정으로 메뉴 가운데 배치 가능 */\r\n");
      out.write("	height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 메인 메뉴 나타내는 li 태그들 */\r\n");
      out.write("#navi>li {\r\n");
      out.write("	float: left;\r\n");
      out.write("	width: 15%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 메뉴 문구를 나타내는 a 태그들 */\r\n");
      out.write("#navi a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: lightcoral;\r\n");
      out.write("	font-size: 13px;\r\n");
      out.write("	font-weight: 900;\r\n");
      out.write("	/*\r\n");
      out.write("                a 태그는 인라인요소이기 때문에\r\n");
      out.write("                width, height 속성이 적용되지 않음\r\n");
      out.write("                => display : block;으로 블럭요소화 시켜줄것임\r\n");
      out.write("            */\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	display: block;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	/*vertical-align : middle;*/ /* verical-align 은 블럭요소에서 적용되지 않음 */\r\n");
      out.write("	line-height: 35px;\r\n");
      out.write("	/*\r\n");
      out.write("                line_height 속성은 블럭요소에 대한 장편조절 속성\r\n");
      out.write("                보통은 블럭요소의 세로길이만큼 주면 알아서 가운데로 옴\r\n");
      out.write("            */\r\n");
      out.write("}\r\n");
      out.write("/* 메뉴에 마우스가 올라갔을 때 추가적인 속성 */\r\n");
      out.write("#navi a:hover {\r\n");
      out.write("	color: crimson;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 서브메뉴에 해당되는 ul에 대한 스타일 */\r\n");
      out.write("#navi>li>ul {\r\n");
      out.write("	list-style-type: none;\r\n");
      out.write("	padding: 0px;\r\n");
      out.write("	display: none; /* 평소에는 안보여지게끔 숨김 처리 */\r\n");
      out.write("}\r\n");
      out.write("/* 메인 메뉴에 마우스가 올라가는 순간 서브메뉴가 보여지게끔 스타일 부여*/\r\n");
      out.write("#navi>li:hover>ul {\r\n");
      out.write("	display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 혹시 몰라서 서브메뉴 자체에도 효과 부여 */\r\n");
      out.write("#navi>li>ul:hover {\r\n");
      out.write("	display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 추가적으로 글씨 크기조정, 스타일, ... */\r\n");
      out.write("</style>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap\"\r\n");
      out.write("	data-tag=\"font\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&amp;display=swap\"\r\n");
      out.write("	data-tag=\"font\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./style.css\" />\r\n");
      out.write("<link href=\"resources/css/navbar11.css\" rel=\"stylesheet\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div>\r\n");
      out.write("		<div class=\"navbar11-navbar1\">\r\n");
      out.write("			<div class=\"navbar11-container1\">\r\n");
      out.write("				<img onclick=\"location.href='");
      out.print( contextPath );
      out.write("'\" style=\"cursor: pointer\"\r\n");
      out.write("					src=\"resources/css/logoimg+logoname.png\" alt=\"logoI204\"\r\n");
      out.write("					class=\"navbar11-logo\" />\r\n");
      out.write("				<div class=\"navbar11-column1\">\r\n");
      out.write("					<div class=\"navbar11-column2\">\r\n");
      out.write("						<span onclick=\"location.href='#1'\"\r\n");
      out.write("							class=\"navbar11-text TextRegularNormal\" style=\"cursor: pointer\">\r\n");
      out.write("							<div class=\"dropdown\">\r\n");
      out.write("								<button class=\"btn btn-secondary dropdown-toggle\"\r\n");
      out.write("									style=\"background-color: rgba(64, 81, 59, 1); border: 0px; border-radius: 0px;\"\r\n");
      out.write("									type=\"button\" id=\"dropdownMenuButton1\"\r\n");
      out.write("									data-bs-toggle=\"dropdown\" aria-expanded=\"false\">게시판</button>\r\n");
      out.write("								<ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n");
      out.write("									<li><a class=\"dropdown-item\" href=\"");
      out.print( contextPath );
      out.write("/plist.bo?currentPage=1\">자유 게시판</a></li>\r\n");
      out.write("									<li><a class=\"dropdown-item\" href=\"");
      out.print( contextPath );
      out.write("/review.bo?currentPage=1\">사진 게시판</a></li>\r\n");
      out.write("								</ul>\r\n");
      out.write("							</div>\r\n");
      out.write("						</span>\r\n");
      out.write("						<div class=\"dropdown\">\r\n");
      out.write("							<button class=\"btn btn-secondary\"\r\n");
      out.write("								onclick=\"location.href='");
      out.print( contextPath );
      out.write("/menu.mn'\"\r\n");
      out.write("								style=\"background-color: rgba(64, 81, 59, 1); border: 0px; border-radius: 0px;\"\r\n");
      out.write("								type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\"\r\n");
      out.write("								aria-expanded=\"false\">메뉴 정보</button>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"dropdown\">\r\n");
      out.write("							<button class=\"btn btn-secondary\"\r\n");
      out.write("								style=\"background-color: rgba(64, 81, 59, 1); border: 0px; border-radius: 0px;\"\r\n");
      out.write("								type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\"\r\n");
      out.write("								aria-expanded=\"false\">매장 정보</button>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<div class=\"dropdown\">\r\n");
      out.write("							<button class=\"btn btn-secondary dropdown-toggle\"\r\n");
      out.write("								style=\"background-color: rgba(64, 81, 59, 1); border: 0px; border-radius: 0px;\"\r\n");
      out.write("								type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\"\r\n");
      out.write("								aria-expanded=\"false\">더보기</button>\r\n");
      out.write("							<ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n");
      out.write("								<li><a class=\"dropdown-item\" href=\"");
      out.print( contextPath );
      out.write("/myPage.me\">마이 페이지</a></li>\r\n");
      out.write("								<li><a class=\"dropdown-item\" href=\"#\">문의 하기</a></li>\r\n");
      out.write("\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					");
 if(loginUser == null) { // 로그인 하기 전  
      out.write("\r\n");
      out.write("						<div class=\"navbar11-column3\">\r\n");
      out.write("							<button onclick=\"location.href='");
      out.print( contextPath );
      out.write("/loginPage.me'\"\r\n");
      out.write("								class=\"navbar11-button\" style=\"cursor: pointer\">\r\n");
      out.write("								<span class=\"navbar11-text08 TextRegularNormal\"> <span>로그인</span>\r\n");
      out.write("								</span>\r\n");
      out.write("							</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					");
 } else { // 로그인 한 후 
      out.write("\r\n");
      out.write("						<div class=\"navbar11-column3\">\r\n");
      out.write("							<button onclick=\"location.href='");
      out.print( contextPath );
      out.write("/logout.me'\"\r\n");
      out.write("								class=\"navbar11-button\" style=\"cursor: pointer\">\r\n");
      out.write("								<span class=\"navbar11-text08 TextRegularNormal\"> <span>로그아웃</span>\r\n");
      out.write("								</span>\r\n");
      out.write("							</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					");
 } 
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\n");
      out.write("    \n");
      out.write("            <div class=\"outer\">\n");
      out.write("            <table>\n");
      out.write("                <thead>\n");
      out.write("                    <tr>\n");
      out.write("                        <th colspan=\"8\">\n");
      out.write("                            <div class=\"category\">\n");
      out.write("                                <label for=\"category\"></label>\n");
      out.write("                                <select id=\"category\">\n");
      out.write("                                    <option value=\"all\">전체</option>\n");
      out.write("                                    <option value=\"notice\">공지사항</option>\n");
      out.write("                                    <option value=\"free\">자유게시판</option>\n");
      out.write("                                </select>\n");
      out.write("                            </div>\n");
      out.write("	    \n");
      out.write("                            <h1>자유게시판</h1> 자유롭게 당신의 의견을 전해주세요!  \n");
      out.write("    						\n");
      out.write("    					");
      out.write("		                        \n");
      out.write("                            <span class=\"btn-group\"> <!-- 버튼 관련 class -->\n");
      out.write("                                <a id=\"list\" class=\"btn btn-secondary\" href=\"\"");
      out.write(" >내게시물</button>\n");
      out.write("                                <a id=\"insertList\" class=\"btn btn-secondary\" href=\"");
      out.print( contextPath );
      out.write("/penrollform.bo\">글작성</button>\n");
      out.write("                            </th>\n");
      out.write("                            </span>\n");
      out.write("                        ");
      out.write("   \n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th width=\"1%\" class=\"table-active\">번호</th>\n");
      out.write("                        <th width=\"60%\" class=\"table-active\">글제목</th>\n");
      out.write("                        <th width=\"10%\" class=\"table-active\">작성자</th>\n");
      out.write("                        <th width=\"3%\" class=\"table-active\">조회수</th>\n");
      out.write("                        <th width=\"10%\" class=\"table-active\">작성일</th>\n");
      out.write("                    </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tbody>\n");
      out.write("                	");
 if(list.isEmpty()) { 
      out.write("\n");
      out.write("                	<tr>\n");
      out.write("                		<td colspan=\"5\">\n");
      out.write("                			조회된 리스트가 없습니다.\n");
      out.write("                		</td>\n");
      out.write("                	</tr>\n");
      out.write("                	");
 } else { 
      out.write("\n");
      out.write("                		");
 for(Post p : list) { 
      out.write("\n");
      out.write("                    <tr class=\"post-1\">\n");
      out.write("                        <td>");
      out.print( p.getPostNo() );
      out.write("</td>\n");
      out.write("                        <td>");
      out.print( p.getPostTitle() );
      out.write("</td>\n");
      out.write("                        <td>");
      out.print( p.getMemberNickname() );
      out.write("</td>\n");
      out.write("                        <td>");
      out.print( p.getPostView() );
      out.write("</td>\n");
      out.write("                        <td>");
      out.print( p.getPostDate() );
      out.write("</td>\n");
      out.write("                    </tr>\n");
      out.write("                    	");
 } 
      out.write("\n");
      out.write("                    ");
 } 
      out.write("	\n");
      out.write("                </tbody> \n");
      out.write("            </table>    \n");
      out.write("            \n");
      out.write("            <script>\n");
      out.write("            	$(function() {\n");
      out.write("            		$(\".list-area>tbody>tr\").click(function() {\n");
      out.write("            		\n");
      out.write("            		let bno = $(this).children().eq(0).text();\n");
      out.write("            		\n");
      out.write("            		location.href = \"");
      out.print( contextPath );
      out.write("/detail.bo?bno=\" + bno;\n");
      out.write("            	});            		\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            </script>\n");
      out.write("    \n");
      out.write("            <br><br>\n");
      out.write("            \n");
      out.write("            <div align=\"center\" class=\"paging-area\">\n");
      out.write("            \n");
      out.write("            	");
 if(currentPage != 1) { 
      out.write("\n");
      out.write("            		 <button onclick=\"location.href = '");
      out.print( contextPath );
      out.write("/plist.bo?currentPage=");
      out.print( currentPage - 1 );
      out.write("';\">\n");
      out.write("            		 	&lt;\n");
      out.write("            		 </button>\n");
      out.write("            	");
 } 
      out.write("\n");
      out.write("            	\n");
      out.write("            	");
 for(int p = startPage; p <= endPage; p++) { 
      out.write("\n");
      out.write("            		");
 if(p != currentPage) {  
      out.write("\n");
      out.write("            			<button onclick=\"location.href = '");
      out.print( contextPath );
      out.write("/plist.bo?currentPage=");
      out.print( p );
      out.write("';\">\n");
      out.write("           					");
      out.print( p );
      out.write(" 			\n");
      out.write("            			</button>\n");
      out.write("            		");
 } else { 
      out.write("\n");
      out.write("            			<button disabled>");
      out.print( p );
      out.write("<</button>\n");
      out.write("            		");
 } 
      out.write("\n");
      out.write("            	");
 } 
      out.write("\n");
      out.write("            \n");
      out.write("            	");
 if(currentPage != maxPage) { 
      out.write("\n");
      out.write("            		<button onclick=\"location.href = '");
      out.print( contextPath );
      out.write("/plist.bo?currentPage=");
      out.print( currentPage + 1);
      out.write("';\">\n");
      out.write("            			%gt;\n");
      out.write("            		</button>\n");
      out.write("            	");
 } 
      out.write("\n");
      out.write("            \n");
      out.write("            </div>\n");
      out.write("    	</div>\n");
      out.write("  \n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
